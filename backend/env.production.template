# ================================
# üîí APPLY.AI PRODUCTION SECURITY CONFIGURATION
# ================================

# ‚ö†Ô∏è  CRITICAL: Replace all placeholder values with actual production values

# ================================
# üîë SECURITY KEYS (REQUIRED)
# ================================

# JWT Secret Key - Generate a strong 64-character secret
# Generate with: openssl rand -hex 32
JWT_SECRET_KEY=your-super-secure-jwt-secret-key-64-chars-minimum-replace-this

# OpenAI API Key - Get from https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# ================================
# üåê CORS & SECURITY CONFIGURATION
# ================================

# Allowed origins (comma-separated)
ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# Trusted hosts (comma-separated)
TRUSTED_HOSTS=yourdomain.com,www.yourdomain.com

# Environment setting
ENVIRONMENT=production

# Debug mode (MUST be false in production)
DEBUG=false

# ================================
# üóÑÔ∏è DATABASE & CACHE
# ================================

# PostgreSQL Database URL (if using database)
DATABASE_URL=postgresql://username:password@host:5432/database_name

# Redis URL for rate limiting and caching
REDIS_URL=redis://username:password@host:6379

# ================================
# üìÅ FILE UPLOAD SECURITY
# ================================

# Maximum file size in bytes (10MB = 10485760)
MAX_FILE_SIZE=10485760

# Upload directory
UPLOAD_DIR=uploads

# Maximum file age in hours before cleanup
MAX_FILE_AGE_HOURS=24

# ================================
# ‚è±Ô∏è RATE LIMITING
# ================================

# Rate limit per minute for API endpoints
RATE_LIMIT_PER_MINUTE=10

# ================================
# üîê AUTHENTICATION
# ================================

# JWT token expiration in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ================================
# üìä MONITORING & LOGGING
# ================================

# Sentry DSN for error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=WARNING

# ================================
# üöÄ DEPLOYMENT CONFIGURATION
# ================================

# Port for the application (Railway uses PORT environment variable)
PORT=8000

# Host binding (0.0.0.0 for Railway/Docker)
HOST=0.0.0.0

# ================================
# üõ°Ô∏è ADDITIONAL SECURITY HEADERS
# ================================

# Content Security Policy (optional override)
# CSP_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline';

# ================================
# üìà PERFORMANCE TUNING
# ================================

# Number of Uvicorn workers (adjust based on CPU cores)
WORKERS=2

# ================================
# üîç SECURITY MONITORING
# ================================

# Security log file path
SECURITY_LOG_FILE=security.log

# Enable security monitoring (true/false)
SECURITY_MONITORING=true

# ================================
# üéØ PRODUCTION CHECKLIST
# ================================

# Before deploying, ensure:
# ‚úÖ All placeholder values are replaced with actual values
# ‚úÖ JWT_SECRET_KEY is at least 32 characters long
# ‚úÖ OPENAI_API_KEY starts with 'sk-'
# ‚úÖ DEBUG is set to false
# ‚úÖ ALLOWED_ORIGINS contains only your production domains
# ‚úÖ REDIS_URL is accessible from your production environment
# ‚úÖ SENTRY_DSN is configured for error tracking
# ‚úÖ Rate limits are appropriate for your expected traffic
# ‚úÖ File upload limits are reasonable for your use case

# ================================
# üìù DEPLOYMENT NOTES
# ================================

# For Railway deployment:
# - Set these as environment variables in Railway dashboard
# - Do not commit this file with real values to version control
# - Use Railway's environment variable interface for secrets

# For Vercel deployment:
# - Set these in Vercel dashboard environment variables
# - Use Vercel's environment variable interface for secrets

# For Docker deployment:
# - Use Docker secrets or environment variables
# - Mount this file as a volume or use docker-compose environment files

# ================================
# üîê SECURITY BEST PRACTICES
# ================================

# 1. Never commit real API keys to version control
# 2. Use strong, unique passwords for all services
# 3. Enable 2FA on all service accounts
# 4. Regularly rotate API keys and secrets
# 5. Monitor logs for suspicious activity
# 6. Keep all dependencies updated
# 7. Use HTTPS everywhere
# 8. Implement proper backup procedures
# 9. Regular security audits and penetration testing
# 10. Have an incident response plan ready 