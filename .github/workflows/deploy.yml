name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Security and quality checks
  security-check:
    name: Security & Quality Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Run security checks
      run: |
        cd backend
        python -m pip install bandit safety
        bandit -r . -x venv,resume_env
        safety check --json
    
    - name: Validate environment configuration
      run: |
        cd backend
        python -c "from config.security import validate_security_environment; validate_security_environment()" || echo "Environment validation requires .env file"

  # Frontend deployment to Vercel
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: security-check
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'

  # Backend deployment to Railway
  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    needs: security-check
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Railway
      uses: railway-app/railway-action@v1
      with:
        api-token: ${{ secrets.RAILWAY_TOKEN }}
        command: up
        working-directory: ./backend

  # Post-deployment health check
  health-check:
    name: Post-Deployment Health Check
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Check backend health
      run: |
        sleep 30  # Wait for deployment to complete
        curl -f ${{ secrets.BACKEND_URL }}/health || exit 1
    
    - name: Check frontend health
      run: |
        curl -f ${{ secrets.FRONTEND_URL }} || exit 1
    
    - name: Notify deployment success
      if: success()
      run: |
        echo "ðŸŽ‰ Deployment successful!"
        echo "Frontend: ${{ secrets.FRONTEND_URL }}"
        echo "Backend: ${{ secrets.BACKEND_URL }}" 